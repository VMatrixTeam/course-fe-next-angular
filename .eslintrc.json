{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx", "prettier", "jsdoc", "prefer-arrow"],
  "settings": {
    "jsdoc": {
      "ignorePrivate": true,
      "ignoreInternal": true,
      "mode": "typescript"
    }
  },
  "overrides": [
    {
      "files": ["*.html"],
      "extends": ["plugin:@nrwl/nx/angular-template"],
      "rules": {
        "@angular-eslint/template/conditional-complexity": "error",
        "@angular-eslint/template/cyclomatic-complexity": "error",
        "@angular-eslint/template/no-call-expression": "error",
        "@angular-eslint/template/use-track-by-function": "error"
      }
    },
    {
      "files": ["*.js"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    },
    {
      "files": ["*.ts"],
      "extends": [
        "plugin:@nrwl/nx/typescript",
        "plugin:@nrwl/nx/angular",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:prettier/recommended",
        "plugin:jsdoc/recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "airbnb-base-typescript-prettier"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        "max-classes-per-file": "off",
        "prefer-arrow-callback": "error",
        "class-methods-use-this": "off",
        "no-console": ["error", { "allow": ["info", "error", "warn"] }],
        "no-useless-constructor": "off",
        "no-unused-vars": "off",
        "lines-between-class-members": "off",
        "padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": ["const", "let"],
            "next": "function"
          },
          {
            "blankLine": "always",
            "prev": "import",
            "next": "*"
          },
          {
            "blankLine": "never",
            "prev": "import",
            "next": "import"
          }
        ],
        "import/prefer-default-export": "off",
        "import/no-unresolved": "off",
        "import/order": "off",
        "import/no-relative-parent-imports": "error",
        "import/named": "off",
        "prefer-arrow/prefer-arrow-functions": [
          "error",
          {
            "disallowPrototype": true,
            "singleReturnOnly": false,
            "classPropertiesAllowed": false,
            "allowStandaloneDeclarations": true
          }
        ],
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "load:eager",
                "onlyDependOnLibsWithTags": ["load:eager"]
              },
              {
                "sourceTag": "load:lazy",
                "onlyDependOnLibsWithTags": ["load:eager"]
              },
              {
                "sourceTag": "scope:student-app",
                "onlyDependOnLibsWithTags": ["scope:student-app", "scope:shared"]
              },
              {
                "sourceTag": "scope:login-app",
                "onlyDependOnLibsWithTags": ["scope:login-app", "scope:shared"]
              },
              {
                "sourceTag": "scope:shared",
                "onlyDependOnLibsWithTags": ["scope:shared"]
              }
            ]
          }
        ],
        "@angular-eslint/component-selector": ["error", { "type": "element", "prefix": "app", "style": "kebab-case" }],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/contextual-decorator": "error",
        "@angular-eslint/prefer-on-push-component-change-detection": "error",
        "@angular-eslint/use-injectable-provided-in": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/relative-url-prefix": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/lines-between-class-members": "error",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["strictCamelCase"]
          },
          {
            "selector": ["variableLike", "memberLike", "property", "method", "function"],
            "format": ["strictCamelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "format": ["strictCamelCase", "UPPER_CASE"]
          },
          {
            "selector": "parameter",
            "format": ["strictCamelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          }
        ],
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/prefer-string-starts-ends-with": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/switch-exhaustiveness-check": "error",
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "allow-as-parameter"
          }
        ],
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "varsIgnorePattern": "^_",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true
          }
        ],
        "@typescript-eslint/prefer-includes": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "classes": [
              "private-field",
              "protected-field",
              "public-field",
              "constructor",
              "private-method",
              "protected-method",
              "public-method"
            ],
            "classExpressions": ["field", "constructor", "method"],
            "interfaces": ["signature", "field", "constructor", "method"],
            "typeLiterals": ["signature", "field", "constructor", "method"]
          }
        ]
      }
    }
  ]
}
